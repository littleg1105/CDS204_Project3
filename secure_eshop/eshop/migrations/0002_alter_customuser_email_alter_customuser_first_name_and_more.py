# Generated by Django 5.2.1 on 2025-05-18 13:09

import django.core.validators
import eshop.utils.fields
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('eshop', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='customuser',
            name='email',
            field=eshop.utils.fields.EncryptedCharField(blank=True, help_text='Email address (encrypted)', max_length=2286, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='first_name',
            field=eshop.utils.fields.EncryptedCharField(blank=True, help_text='First name (encrypted)', max_length=1350, verbose_name='first name'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='last_name',
            field=eshop.utils.fields.EncryptedCharField(blank=True, help_text='Last name (encrypted)', max_length=1350, verbose_name='last name'),
        ),
        migrations.AlterField(
            model_name='shippingaddress',
            name='address',
            field=eshop.utils.fields.EncryptedCharField(max_length=1800, verbose_name='Διεύθυνση'),
        ),
        migrations.AlterField(
            model_name='shippingaddress',
            name='email',
            field=eshop.utils.fields.EncryptedCharField(help_text='Απαιτείται για επικοινωνία σχετικά με την παραγγελία', max_length=2286, null=True, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='shippingaddress',
            name='name',
            field=eshop.utils.fields.EncryptedCharField(max_length=900, verbose_name='Ονοματεπώνυμο'),
        ),
        migrations.AlterField(
            model_name='shippingaddress',
            name='phone',
            field=eshop.utils.fields.EncryptedCharField(help_text='Εισάγετε έγκυρο ελληνικό αριθμό τηλεφώνου (π.χ. 2101234567 ή 6981234567 ή +30 6981234567)', max_length=180, null=True, validators=[django.core.validators.RegexValidator(code='invalid_phone', message='Παρακαλώ εισάγετε έγκυρο ελληνικό αριθμό τηλεφώνου (σταθερό ή κινητό)', regex='^(?:\\+30|0030)?(?:\\s*)(?:(?:69\\d{8})|(?:2\\d{9}))$')], verbose_name='Τηλέφωνο'),
        ),
    ]
