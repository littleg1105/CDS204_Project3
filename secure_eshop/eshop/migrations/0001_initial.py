# Generated by Django 5.2.1 on 2025-05-19 14:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import eshop.models.orders
import eshop.utils.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', eshop.utils.fields.EncryptedCharField(blank=True, help_text='Email address (encrypted)', max_length=1000, verbose_name='email address')),
                ('first_name', eshop.utils.fields.EncryptedCharField(blank=True, help_text='First name (encrypted)', max_length=1000, verbose_name='first name')),
                ('last_name', eshop.utils.fields.EncryptedCharField(blank=True, help_text='Last name (encrypted)', max_length=1000, verbose_name='last name')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Εικόνα Προφίλ')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Χρήστης',
                'verbose_name_plural': 'Χρήστες',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.CharField(default=eshop.models.orders.generate_order_id, editable=False, max_length=20, primary_key=True, serialize=False)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Συνολικό Ποσό')),
                ('status', models.CharField(choices=[('pending', 'Εκκρεμεί'), ('processing', 'Σε επεξεργασία'), ('shipped', 'Απεστάλη'), ('delivered', 'Παραδόθηκε'), ('cancelled', 'Ακυρώθηκε')], default='pending', max_length=20, verbose_name='Κατάσταση')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Ημερομηνία Δημιουργίας')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Τελευταία Ενημέρωση')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Χρήστης')),
            ],
            options={
                'verbose_name': 'Παραγγελία',
                'verbose_name_plural': 'Παραγγελίες',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Ποσότητα')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Τιμή')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='eshop.order', verbose_name='Παραγγελία')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eshop.product', verbose_name='Προϊόν')),
            ],
            options={
                'verbose_name': 'Αντικείμενο Παραγγελίας',
                'verbose_name_plural': 'Αντικείμενα Παραγγελίας',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', eshop.utils.fields.EncryptedCharField(max_length=900, verbose_name='Ονοματεπώνυμο')),
                ('address', eshop.utils.fields.EncryptedCharField(max_length=1000, verbose_name='Διεύθυνση')),
                ('city', models.CharField(max_length=100, verbose_name='Πόλη')),
                ('zip_code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(code='invalid_zip_code', message='Ο ταχυδρομικός κώδικας πρέπει να αποτελείται από 5 ψηφία', regex='^\\d{5}$')], verbose_name='ΤΚ')),
                ('country', models.CharField(max_length=100, verbose_name='Χώρα')),
                ('phone', eshop.utils.fields.EncryptedCharField(help_text='Εισάγετε έγκυρο ελληνικό αριθμό τηλεφώνου (π.χ. 2101234567 ή 6981234567 ή +30 6981234567)', max_length=180, null=True, validators=[django.core.validators.RegexValidator(code='invalid_phone', message='Παρακαλώ εισάγετε έγκυρο ελληνικό αριθμό τηλεφώνου (σταθερό ή κινητό)', regex='^(?:\\+30|0030)?(?:\\s*)(?:(?:69\\d{8})|(?:2\\d{9}))$')], verbose_name='Τηλέφωνο')),
                ('email', eshop.utils.fields.EncryptedCharField(help_text='Απαιτείται για επικοινωνία σχετικά με την παραγγελία', max_length=1000, null=True, verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Διεύθυνση Αποστολής',
                'verbose_name_plural': 'Διευθύνσεις Αποστολής',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='eshop.shippingaddress', verbose_name='Διεύθυνση Αποστολής'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eshop.product')),
            ],
            options={
                'unique_together': {('cart', 'product')},
            },
        ),
    ]
